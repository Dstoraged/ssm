export default {
  comm: {
    tips:"Tips",
    newprivatefilled: "New wallet private key filled！",
    mnemonicBackup: "Mnemonic backup",
    matchSucceeded: "Match succeeded!",
    mnemonicFailed: "Mnemonic code matching failed, please re select!",
    back: "Back",
    normalService: "Normal service",
    reclaimingCapacity: "Reclaiming rental capacity",
    renewalPledge: "Renewal pledge",
    leasePledge: "Lease pledge",
    warning: "Warning",
    notVerified: "Not verified",
    utilization: "utilization",
    WaitingEncapsulation: "Waiting for encapsulation",
    capacityEncapsulation: "Capacity encapsulation in progress",
    capacityCompleted: "Capacity packaging completed",
    pledged: "Pledged, renting service",
    unpacking: "Unsealing",
    deviceManagement: "Server Management",
    versionMismatch: "Version mismatch",
    protocolError: "Protocol error",
    invalidName: "Invalid user name",
    invalidPassword: "Invalid password",
    loading: "Loading",
    statusConformance: "The device status does not match. Please try again later",
    tooAttempts: "Too many attempts",
    loginExpired: "Login expired",
    parameterError: "Parameter error",
    success: "Success",
    enable: "Enable",
    application: "Application",
    pledgeFailed: "Pledge Failed",
    waitingPledge: "Waiting for pledge",
    pledged: "Activated",
    removing: "Removing",
    beConfirmed: "To be confirmed",
    pledgeReturned: "Exited",
    inactive:"Inactive",
    withdrawalPledge: "Pledge removal",
    fail: "Fail",
    success: 'Success',
    clickLoad: 'Click to load more',
    bottomLine: 'I have a bottom line',
    just: ' just ',
    second: ' secs ',
    minute: ' min ',
    hour: ' hr ',
    day: ' days ',
    week: ' weeks ',
    month: ' months ',
    year: ' years ',
    time: 'Time',
    before: 'ago',
    firstPage: 'First',
    lastPage: 'Last',
    goto: "Go to",
    page: "Page",
    show: 'Show',
    selected: 'Select',
    records: 'Records',
    noData: 'No Data',
    nav: 'Navigation',
    language: 'Language',
    community: 'Community',
    searchTips: 'Search by Address / Txn Hash / Block',
    search: 'Search',
    alreadyTran: 'Verified Txns',
    waitTran: 'Pending Txns',
    close: 'Cancel',
    searchNoData: 'No information related to “{0}” ！',
    backToHome: 'Back',
    server: 'Server',
    pocket: 'Wallet',
    website: 'NetFlowCoin Website',
    operationRejected:"Operation rejected",
    insufficientMemory:"Insufficient system memory",
    entrynot:"Entry does not exist"
  },
  layout: {
    connectWallet: "Connect Wallet",
    notWallet: "Wallet not connected"
  },
  table: {
    add: "Add",
    operation: "Operation",
    confirm: "Confirm",
    cancel: "Cancel",
    exchange: "Exchange",
    convert: "Convert",
    days: " Day",

    show: "Show",
    first: "First",
    records: "Records",
    last: "Last",
    total: "There is {0} data in total"
  },
  messages: {
    appupdate: "version is too low, please upgrade!",
    continuePledge: "Continue pledge?",
    sealingState: "Sealing state",
    remainingTime: "Remaining Time",
    addresslocked: "The address is locked and cannot be pledged",
    addressused: "The revenue address has been used!",
    pleaseaddress: "Please enter the correct wallet address",
    norepeatedpledge: "Non repeatable pledge",
    norepeatedpledgeDev: "The equipment has been pledged. The equipment address cannot be modified now",
    required: "Required",
    confirm: "Confirm",
    cancel: "Cancel",
    notkey: "Please enter the correct private key",
    copy: "Copy",
    mnemonic: "Mnemonic",
    privatekey: "Private Key",
    wallet: "Wallet",
    newwallet: "New Account",
    accountKey: "Paste your private key string here:",
    importPrivateKeyMsg: "Import private key, you can seal, pledge and other operations!",
    importAccountMsg: "Import  account address separately, which can only be sealed, and pledge is not allowed!",
    upAddr: "Address",
    importAccount: "Import account address",
    createAccount: "Create Account",
    importPrivateKey: "Private key",
    import: "Import",
    account: "Account",
    closewindowbefore: "Before closing the window, you need to back up the mnemonic and private keys",
    notnetworkinkey: "Browsers don't store your mnemonics and private keys",
    notnetwokin: "Do not disclose the mnemonic to anyone, and do not save it on the Internet",
    bearinmind: "Warning",
    clickcopy: "Click to Copy",
    pleaserevenue: "Please enter the correct revenue address",
    pleaseminer: "Please switch the wallet user to the device address",
    binding: "Binding",
    jump: "Jump",
    jumppledgetext: "Have you completed binding, confirm to skip pledge?",
    search: "Search",
    pledgok: "Successful Pledge",
    copykey: "Copy Privatekey",
    minerprivatekey: "The wallet private key for the miner's address",
    newaddress: "The New Address",
    joinsuccess: "Join the Success!",
    notifypool: "Notify the ore pool",
    requestbinding: "Request the Binding",
    getcontract: "To get the contract",
    randomnumber: "Get random number",
    bindingsignature: "Binding Signature",
    signature: "Signature",
    pleaseconfirm: "Please Confirm !",
    confirmed: "Confirmed. It may take some time to wait for results",
    bindinglift: "Unbind",
    pleasebrowser: "Please open it using your browser",
    pleaseDevOrRevenue: "Please switch your wallet account to revenue address or device address",
    pleaseunbind: "Please unbind with the revenue account first",
    pleasesupload: "Please save your private key and upload it to the mining machine",
    upwallet: "You can change the binding address by swapping wallets",
    notEncapsulated: "Not Sealed",
    encapsulating: "Encapsulating",
    packageComplete: "Sealing Complete",
    notAvailable: "Not available",
    notPossible: "Encapsulation is not possible at this time",
    nowEncapsulation: "Encapsulation is not possible now",
    logoutin: "Are you sure you want to log out?",
    versionMismatch: "Version mismatch",
    notPledge: " You cannot pledge for the time being",
    needLogin: "The password has been reset. You need to log in again",
    connectionFailed: "Connection failed",
    RevenueBeenBound: "Completed!",
    notDeviceAddress: "The device address cannot be modified now",
    encapsulationText1: "Storage space sealing takes time, please wait patiently.",
    encapsulationText2: "Do not turn off the storage server or unplug the hard disk during sealing to avoid errors",
    pleaseEncapsulation1: "Please enter a multiple of 5 for the Sealing space1.",
    pleaseEncapsulation2: "{0} GB≤Sealing Space≤{1} GB.",
    originalAddress: "Original address",
    newAddress: "New address",
    transferAddress: "Transfer Revenue address",
    pleaseOriginal: "Please switch your wallet account to the original revenue address",

    pleaseWalletFirst: "Please connect your wallet first",
    availableRange: "Available range {0}",
    pleaseSlashed: "Please fill in truthfully. If you fail to pass the daily verification, you will be slashed",
    insufficientBalance: "Insufficient wallet balance, pledge will not succeed",
    submitProve: "Confirm to submit a verification message?",
    spaceMessageSent: "Verification information has been sent!",
    upPrivateKey: "The private key is inconsistent with the current account address. If you continue to import, the account will be changed and need to be sealed again!",
    upAddrMsg: "The filled address is inconsistent with the current account address. If you continue to import, the account will be changed and need to be sealed again!",
    notUpkey: "You have not yet imported the private key for the account address and cannot proceed to the next step!",
    lackInformation: "The verification information is missing. Please try again later!",
    delayedNot: "Can't recycle now, please try again later!",
    pleasePledge: "Please switch wallet user to pledge account",
    BandwidthTest: "Bandwidth test speed",
    nowMakeUp: "Make up now",
    spaceTimeDestroyed: "According to the calculation results of the space-time Certificate in the last month, there is an anomaly that the effective uplink bandwidth value of the node does not match the declared uplink bandwidth value of the node. Please be sure to adjust the declared uplink bandwidth value according to the uplink bandwidth number tested by Speedtest or 80% of the uplink bandwidth provided by the broadband operator of the node within 7 days. Otherwise, the overflow unlocked reward of the node will enter the destruction address after unlocking.",
    pleasetopledge: "Please switch the wallet user to the pledge address",
    yournotyear: "The equipment has been pledged for less than one year, and it cannot be withdrawn now!",
    bandwidthChangeMsg:"Please adjust the effective uplink bandwidth value of the node to avoid the overflow part of the verified uplink bandwidth value exceeding the claimed uplink bandwidth value due to the abnormal verification mismatch of the uplink bandwidth value. The reward will enter the destruction address after unlocking.",
    bandwidthAppendMsg:"If you think that the uplink bandwidth value calculated by the space-time proof of the node does not match correctly, please follow the prompt to add the bandwidth pledge number to match the declared uplink bandwidth of the node, so as to prevent the unlocked reward from entering the destruction address after unlocking.",
    bandwidthIgnoreMsg:"If the bandwidth adjustment or additional pledge is not performed after receiving the abnormal prompt of uplink bandwidth verification mismatch, the overflow unlocked reward of the node will enter the destruction address after unlocking.",
    pleaseclickTest:"Please click \"bandwidth test speed\" first",
    pleaseOriginalBandwidth:"The original bandwidth value cannot be used, please adjust it!",
    chainnot:"The current chain ID of the device is inconsistent with the chain ID in the configuration information. If reset, the network will be switched. Are you sure to reset?",
    chainnotTwo:'Device network: {0}\n current environment network: {1}\n reset will switch the network to “{2}” \n confirm reset?',
    pleaserevenueaccount:"Please bind the revenue account first",
    exitingMsg: "You are exiting PoSR and PoTS, and you will not be able to contribute storage space after exiting! If you want to participate in PoSR and PoTS again after exiting, you need to RE-SEAL the storage space！Please confirm whether you want to exit!",
    resetMsg:"You are releasing the sealed space, please confirm your pledge status first! If it is currently pledged, it will not be able to pass the space-time verification after releasing!",
    ok:"OK",
    no:"No",
    resetSpaced:"Reset space request sent",
    pleasePledgeFirst:"Please pledge first!",
    pleaseAdministrative:"Please switch the wallet user to the administrative address",
    invalidAddress:"Invalid address",
    addrNotMeg:"The uploaded address is not consistent with the current account address, please unwrap it first!",


  },
  utilsmsg: {
    copyok: "Copied to clipboard",
  },
  loadingSubPan: {
    state: "State",
    loading: "Trading in Progress",
    finish: "Finish",
    finishText: "The transaction has been completed. It may take some time for the transaction result to take effect. Please wait patiently and do not repeat the operation!",
    failure: "Failure",
    close: "Close Window",
    ok: "ok",
    Hasbeenused: "Has Been Used",
    well: "Well",
    pleaseConfirm:"Please confirm!",
  },
  lock: {
    Releasetype: "Release Type",
    lockRelease: 'Lock&Release',
    lock: 'Lock',
    extract: 'Extract',
    currentLockNumber: 'Total {0} Locking',
    currentReleaseNumber: 'Total {0} Records',
    lockSearch: 'Search by Address',
    pledgeSearch: 'Search Pledge Address',
    extractSearch: 'Search Extract Address',
    order: 'Order Number',
    type: 'Lock Type',
    address: 'Lock Address',
    totalAmount: 'Amount',
    leftAmount: 'Unlocked Amount',
    lockNumber: 'Unlock Time',
    teamLock: 'Team Lock',
    teamFreed: 'Team Freed',
    nodeaward: "Block Reward Lock",
    nodeawardAmount: "Block Reward",
    nodeawardNumber: "Block Rewards",
    nodeawardFreed: "Block Reward Release",
    nodeLock: 'PoS Pledge Lock',
    nodeFreed: 'PoS Pledge Release',
    flowLock: 'Flow Reward Lock',
    flowFreed: 'Flow Reward Release',
    RewardRelease: "Reward Release",
    LockedReward: "Locked Reward",
    FlowLockedReward: "Flow Locked Reward",
    bandwidthLockedReward: "Bandwidth Locked Reward",
    blockNumber: "Block",
    day: 'Day',
    pledge: 'Pledge',
    currentPledgeNumber: 'Total {0} Pledge',
    pledgeType: 'Pledge Type',
    node: 'Node',
    nodeAddress: 'Node',
    state: 'State',
    state11: 'Pre-Candidate Nodes',
    state12: 'Witness Node',
    state13: 'Exited Node',
    state21: 'Mining',
    state22: 'Added Pool',
    state23: 'Exit Pool',
    pledgeAddress: 'Pledge Address',
    totalPledgeAmount: 'Pledge Amount',
    currentExtractNumber: 'Total {0} Extract Data',
    extractAddress: 'Extracted Address',
    extractNumber: 'Extracted Number',
    profitValReward: 'Dividend Reward',
    extractFee: 'Fee',
    minerLock: 'PoF Pledge Lock',
    minerFreed: 'PoF Pledge Release',
    minerAddress: 'Miner',
    profitaddress: 'Profit(Lock) Address',
    freedTime: 'Time',
    freed: "Amount",
    freedDetails: "Release Details",
    BandwidthLock: "Bandwidth Reward Lock",
    bandwidthFreed: "Bandwidth Reward Release",
    stateOk: "OK",
    Waiting: "Waiting",
    WaitingReleased: "Waiting Released",
    Released: "Released",
    ReleasedReward: "Released Reward",
    flowReleasedReward: "Flow Released Reward",
    bandwidthReleasedReward: "Bandwidth Released Reward",
    Locked: "Locked",
    ReleasedTime: "Released Time",
    blockrewardLock: "Block Reward Lock",
    blockrewardFreed: "Block Reward Release",
    burningamount:"Burning Amount"
  },
  language: "English",
  overview: "Overview",
  equipmentPledge: "Pledge & Seal & migration",
  resetPassword: "Change Password",
  logout: "Log out",
  login: {
    connectServer: "Access your Storage Server",
    quickLogin: "Quick login",
    pleaseserver: "Enter the network address",
    pleasepassword: "Enter the login password",
    link: "Server Address",
    saveTime: "Save Time",
    password: "Password",
    remember: "Remember",
    mnemonicName: "mnemonic-name",
    login: "Login"
  },


  home: {
    areexit:"Are you sure to exit?",
    withdrawexit:"There is a lease. If you withdraw the lease in advance, you will be treated as a breach of the lease. If you want to participate in PoSR and PoTS again after exiting, you need to RE-SEAL the storage space！",
    deviceState: "Device State",
    serverAddress: "Server Address",
    serverAccount: "Server Account",
    revenueAccount: "Revenue Account",
    pledgeCapacity: "Pledge Capacity",
    pledgeStatus: "Pledge Status",
    status: "Status",
    cpuUsage: "Cpu Usage",
    memoryUsage: "Memory",
    uptime: "Up-time",
    storageSpace: "Storage Space",
    total: "Total",
    used: "Used Space",
    remainingSpace: "Unsealed",
    pledgeStatus: "Pledge Status",
    pledgeTime: "Pledge Time",
    availableSpace: "Available Space",
    totalRevenue: "Total revenue",
    spaceIncome: "Grant Rewards",
    rentalIncome: "Service rewards",
    unbind: "Unbind",
    encapsulatedSpace: "Sealing Space",
    encapsulated: "Sealed",
    rentableSpace: "Rentable space",
    spacealready: "Space already rented",
    encapsulation: "Sealed",
    submitValidation: "Submit validation",
    spaceTimeProve: "Spatiotemporal proof verification",
    vaildTime: "Last verification Time",
    Lastinspection: "Last inspection",
    InspectionProgress: "Inspection progress",
    abnormalpledge: "Abnormal pledge",
    pledgeAmount: "Pledge amount",
    supplementarydeposit: "Supplementary pledge deposit",
    estimatedsupplementary: "Estimated supplementary",
    append:"Append",
    adjust:"Adjust",
    ignore:"Ignore",
    adjustTitle:"Adjust the uplink bandwidth",
    appendTitle:"Additional pledge amount",
    estimatedamount:"Estimated amount",
    pledgedAmount:"Pledged amount",
    estimatedAddition:"Estimated addition",
    confirmOriginal:"Confirm the original declared uplink bandwidth value",
    confirmBandwidth:"Confirm uplink bandwidth",
    allselections:"Ignore all selections",
    resetSpace:"Reset space",
    maxSpace:"Upper space limit"
    
  },
  pledge: {
    walletBalance: "Wallet balance",
    Estimatedfee: "Estimated pledge fee",
    devOk: "Device address set successfully",
    upkey: "Import Account",
    encapsulation: "Sealing",
    pledge: "Pledge",
    upload: "Upload",
    startEncapsulation: "Start Sealing",
    status: "Status",
    viewProgress: "View Progress",
    next: "Next",
    estimated: "Estimated Price",
    deviceAddress: "Server Account",
    deviceAddressNow: "Current Account",
    revenueAddress: "Revenue Account",
    revenueAddressBin: "Revenue Account",
    rentalPrice: "Rental Price",
    bindaddr: "Bind Revenue Account",
    setRentalPrice: "Set rental price",
    bandwidthCoefficient: "Bandwidth coefficient",
    pledgeCoefficient:"Bandwidth pledge coefficient",
    storageFactor: "Storage factor",
    setBandwidth: "Set Bandwidth",
    pledgeAmount: "pledge Amount",
    unpacking: "Exit",
    unpackingCapacity: "Unpacking capacity",
    storagePledge: "Storage pledge",
    rentalDuration: "Rental duration",
    renting: "Renting",
    leaseFailed: "Lease failed",
    endLease: "End of lease",
    terminationProgress: "Termination in progress",
    deleted: "Deleted",
    spaceenCapsulated: "Available Capacity",
    serverBandwidth: "Server uplink bandwidth",
    storageAccount: "Storage server account",
    breachContract: "Breach of contract",
    rewardRatio:"SN Reward Distribution Ratio"

  },
  rPassword: {
    return: "Return",
    newPassword: "Password",
    confirmPassword: "Confirm password",
    confirmModification: "Save",
    twopassword: "The two passwords are inconsistent",
    connectedServer: "Server Address",
    modifyPassword: "Change Password",

  },
  market: {
    rent: "Rent",
    renewal: "Renewal",
    market: "Market",
    pledgeSpace: "Pledge space",
    rentalAddress: "Rental Address",
    leaseStatus: "Lease Status",
    rentedSpace: "Rented Space",
    applicationTime: "Application Time",
    leasePledge: "Lease pledge",
    rentalType: "Rental type",
    view: "View details",
    outstandingRequests: "You have outstanding requests!",
    otheroutstanding: "You have other outstanding requests!",
    agree: "Agree",
    renewalList: "Renewal list",
    pending: "Pending",
    passed: "Passed",
    rentalList: "Rental list",
    leaseExpired: "Lease expired",
    requestExpired: "request expire",
    complete: "Complete",
    rentalPretreatment: "Rental pretreatment",
    unfinished: "Unfinished",
    revoke: "Rental space recycling",
    handle: "Handle",
    clickhere: "Click here to view!",
    rentalProcessing: "Rental processing",
    leaseDetails: "Lease details",
    pretreatmentProgress: "Pretreatment in progress",
    renewableBlock: "Renewable block",
    renewalRequest: "Renewal request",
    applications: "Applications",
    pledgeAccount: "Pledge account",
    rentalAmount: "Rental amount",
    recovery:"Recovery",
    pleaseRecovery:"The recovery operation must be completed before other lease operations can be performed",
    pleaseRevoke:"Other lease operations can only be performed after cancellation",
    revocationOk:"Successfully recycled",
    pleasepatiently:"Data synchronization is in progress, please wait patiently....!",
    leaseexception:"have a lease. There is an exception!",
    LeaseexpiredNopledged:"Lease request has expired and cannot be operated!",
    WaitingRecycling:"Waiting for lease Package Recycling",
    torecycled:"Waiting for recycling",
    showtorecycled:"Show only to be recycled",
    pleasepackagesrental:"There are rental packages waiting for recycling, please recycle first!",
    igotit:"I got it",
    errorSealed:"Error: lease not sealed",
    equipmentlease:"The lease task of the equipment is not completed",
    leaseFailed:"Lease failed",
    recycling:"Recycling...",
    Pleaseexceedsblocks:"Please confirm that {0} exceeds 24 hours ({1} blocks)!",
    spaceInsufficient:"Rentable space",
    imagecannot:"The image size cannot exceed {0}KB",
    savingSucceeded:"Saving succeeded",
    uploadLink: "Upload link",
    clickUpload:"Click Upload",
    linkAddress:"Link Address",
    requestSignature:"Request signature",
    noLink:"No link configured!",
    configure:"Configure"
    

  },
  settings: {
    setting: "settings",
    chainId: "chain ID",
    leasepayback: "Lease payback period",
    dayblocks: "blocks per day",
    pledgequery: "Pledge query interface",
    rpcUrl: "NODE URL",
    test: "inspect",
    urlalready: "This URL is already in the list",
    pleaseUrl: "Please enter a valid URL",
    configurationsaved: "Configuration saved",
    checkingRPC: "Checking Node……",
    rpcavailable: "Node available",
    rpcadd: "Add Node",
    rpcedit: "Node Edit",
    remove: "Remove",
    testNetwork: "Test network",
    mainNetwork: "Main network",
    configurationName: "Configuration name",
    moveupdown: "Move down",
    moveup: "Move up",
    invalidRPC: "Invalid Node",
    initialization: "initialization",
    node: "Node",
    configreset: "Reset device configuration now?",
    reset: "Reset",
    leasecannotexit: "There is also a lease in progress. You cannot exit now!"

  },
  logs: {
    log: "logs",
    type: "Type",
    voucher: "voucher",
    sealPOC: "Seal POC",
    rentPOC: "Rent POC",
    leaserecovery: "Lease recovery POC",
    err_outPledge: "out pledge",
    err_checkfail: "check poc fail	POC",
    err_pledgefail: "enquire pledge fail",
    err_blockfail: "enquire block fail",
    err_noncefail: "enquire nonce fail",
    err_gasPricefail: "enquire gasPrice fail",
    err_rpcfail: "utg post data to chain rpc fail",
    allLogs: "All",
    loginPassword: "Login & Change Password",
    sealUnseal: "Seal & Unseal",
    rentalRecycling: "Rental & recycling",
    submissionPOC: "POC submission",
    content: "Content",
    operationType: "Operation type",
    usrLogin: "User login",
    changePassword: "Change Password",
    sourceIP: "Source IP",
    resetPassword: "Reset Password",
    startEncapsulation: "Start sealing",
    abortEncapsulation: "Break seal",
    completeSealing: "Complete sealing",
    unsealing: "Unsealing",
    block: "Block",
    sealSize: "Seal Size",
    spaceRental: "Space rental",
    spacepledgerecycling: "Space lease pledge timeout recycling",
    Spaceleaserecycling: "Space lease expiration recycling",
    rentalvoucher: "Rental voucher",
    remainingspace: "Remaining space",
    POCprogress: "POC processing progress",
    submissionplan: "Develop submission plan",
    pendingsubmission: "waiting submission",
    waitingverification: "Submitted successfully, waiting for verification",
    Validationsuccessful: "Validation successful",
    retrySubmission: "Retry submission",
    resubtrue: "yes",
    resubfalse: "no",
    errormessage: "error message",
    submitestimated: "Estimated submission height",
    estimatedtime: "Estimated submission time",
    submissionnode: "Submission node",
    submissiontime: "Submission time",
    detailedlist: "Detailed list",
    sealedBlock: "Sealed block",
    details:"details",
    verificationre:"Verification results",
    logDetails:"Log details",
    chainDays:"Chain date",
    days:"Days"
  },
  newManage:{
    bindStoragePool:"Bind SP",
    setManagementAddress:"Set Admin Address",
    transferManagementAddress:"Transfer Admin Address",
    newManagement:"New Address",
    bindingManagementAddress:"Binding Admin Address",
    originalAddress:"Original Address",
    managedAccount:"SN Admin Address",
    owningStoragePool:"SP Original",
    amountPledged:"Pledged",
    rewardRatio:"SN Reward Distribution Ratio",
    adjustmentPledge:"Adjustment of pledge",
    changeRewardRatio:"Change SN Reward Distribution Ratio",
    select:"Select",
    transferStoragePool:"SP Transfer",
    newStoragePool:"SP New",
    exitStoragePool:"SP Exit",
    storagePool:"Storage Pool",
    originalStoragePool:"SP Original",
    bindStoragePool:"SP Bind",
    selectStoragePool:"SP Select",
    storageFactor:"Storage Factor",
    rewardDistributionRatio:"Reward Distribution Ratio",
    storageSpace:"Storage Space",
    usedSpace:"Access Space",
    migration:"Migration",
    nodeMigration:"Node Migration",
    transferSeal:"Transfer mode must seal size",
    originalSpace:"Original Space"
  }
}
